<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- spring 容器 -->
    <!-- 扫描 注解 不扫描 子类(springMVC) controller 注解    vo 包 是 pageVo-->
    <context:component-scan base-package="com.dao"/>
    <context:component-scan base-package="com.vo"/>
    <context:component-scan base-package="com.utils"/>

    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 初始化数据源对象: 德鲁伊 DruidDataSource -->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!-- 与数据库建立的基本信息 -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 关于数据库连接池的基本信息 -->
        <property name="maxActive" value="50"/>
        <property name="initialSize" value="5"/>
        <property name="minIdle" value="1"/>
        <property name="maxWait" value="60000"/>
    </bean>

<!--    &lt;!&ndash; Spring整合Mybatis，更多查看文档：http://mp.baomidou.com &ndash;&gt;
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="druidDataSource"/>
        &lt;!&ndash; 自动扫描Mapping.xml文件 &ndash;&gt;
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="typeAliasesPackage" value="com.dao.*"/>
        &lt;!&ndash; 分页 &ndash;&gt;
        <property name="plugins">
            <array>
                <bean class="com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor" />
            </array>
        </property>
        &lt;!&ndash; 全局配置注入 &ndash;&gt;
        <property name="globalConfig" ref="globalConfig" />
    </bean>
    <bean id="globalConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig">
        <property name="dbConfig" ref="dbConfig"/>
    </bean>
    <bean id="dbConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig.DbConfig">
        <property name="keyGenerator" ref="keyGenerator"/>
    </bean>
    <bean id="keyGenerator" class="com.baomidou.mybatisplus.extension.incrementer.DB2KeyGenerator"/>

    &lt;!&ndash; MyBatis 动态扫描  &ndash;&gt;
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dao"/>
    </bean>-->

    <!-- 配置 SqlSessionFactory 的 bean 和 mybatis 配置文件 -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="druidDataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!-- 配置 mybatis 接口的代理对象 bean 根据 指定的包 把 sql 映射文件 找出来 创建对象 指定 代理对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dao"/>
    </bean>
</beans>